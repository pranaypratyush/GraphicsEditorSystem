/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Pranay Pratyush
 */
package graphicseditorsystem;

import static graphicseditorsystem.GraphicsEditorSystem.canvas;
import static graphicseditorsystem.GraphicsEditorSystem.copy_group_clip;
import static graphicseditorsystem.GraphicsEditorSystem.copy_object_clip;
import static graphicseditorsystem.GraphicsEditorSystem.currentfilename;
import java.awt.Color;
import java.awt.geom.Point2D;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Shubham Saxena
 */
public class gesworkspace extends javax.swing.JFrame
{

    /**
     * Creates new form gesworkspace
     */
    public gesworkspace()
    {
        initComponents();
    }
    static int cur_but = 5;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panel1 = new java.awt.Panel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem38 = new javax.swing.JMenuItem();
        jMenuItem39 = new javax.swing.JMenuItem();
        jMenuItem40 = new javax.swing.JMenuItem();
        jMenuItem41 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenu10 = new javax.swing.JMenu();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenu11 = new javax.swing.JMenu();
        jMenuItem28 = new javax.swing.JMenuItem();
        jMenuItem29 = new javax.swing.JMenuItem();
        jMenu12 = new javax.swing.JMenu();
        jMenuItem30 = new javax.swing.JMenuItem();
        jMenuItem31 = new javax.swing.JMenuItem();
        jMenu13 = new javax.swing.JMenu();
        jMenuItem32 = new javax.swing.JMenuItem();
        jMenuItem33 = new javax.swing.JMenuItem();
        jMenu14 = new javax.swing.JMenu();
        jMenuItem34 = new javax.swing.JMenuItem();
        jMenuItem35 = new javax.swing.JMenuItem();
        jMenu15 = new javax.swing.JMenu();
        jMenuItem36 = new javax.swing.JMenuItem();
        jMenuItem37 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(currentfilename + " - Graphics Editor System");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphicseditorsystem/circle.gif"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphicseditorsystem/line.gif"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphicseditorsystem/rectangle.gif"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphicseditorsystem/ellipse.gif"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphicseditorsystem/polygon.gif"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphicseditorsystem/mouse.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphicseditorsystem/continuousline.gif"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphicseditorsystem/dashedline.gif"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphicseditorsystem/dottedline.gif"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton9ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Small");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Medium");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Large");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jButton10.setText("Fill Color");
        jButton10.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("fit screen");
        jButton11.setToolTipText("");
        jButton11.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton11ActionPerformed(evt);
            }
        });

        jButton13.setText("+");
        jButton13.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("-");
        jButton14.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton14ActionPerformed(evt);
            }
        });

        jButton12.setText("UP");
        jButton12.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton12ActionPerformed(evt);
            }
        });

        jButton15.setText("RIGHT");
        jButton15.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("LEFT");
        jButton16.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("DOWN");
        jButton17.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Add text");
        jButton18.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton18ActionPerformed(evt);
            }
        });

        jLabel1.setText("Line Width");
        jLabel1.setToolTipText("");

        jLabel2.setText("Line Type");

        jLabel3.setText("Pan");
        jLabel3.setToolTipText("");

        jLabel4.setText("Zoom");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)
                        .addComponent(jButton10))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton18)))
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton2)))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(28, 28, 28)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButton2)
                                    .addComponent(jButton8)))
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton3)
                            .addComponent(jButton9))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton15)
                        .addComponent(jButton16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton17)
                    .addComponent(jButton18)))
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("New");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Save as");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Save");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem7.setText("Exit");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Cut");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setText("Copy");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setText("Paste");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItem10.setText("Delete");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuItem11.setText("Modify");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);

        jMenuItem12.setText("Move");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Import/Export");

        jMenuItem13.setText("Import Image");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem13);

        jMenuItem14.setText("Export as Image");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem14);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Group");

        jMenuItem15.setText("add");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem15);

        jMenuItem4.setText("delete");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuItem16.setText("add to");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem16);

        jMenuItem17.setText("remove from");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem17);

        jMenuItem38.setText("select");
        jMenuItem38.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem38ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem38);

        jMenuItem39.setText("move");
        jMenuItem39.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem39ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem39);

        jMenuItem40.setText("copy");
        jMenuItem40.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem40ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem40);

        jMenuItem41.setText("paste");
        jMenuItem41.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem41ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem41);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("ClipBoard");

        jMenu6.setText("ClipBoard1");

        jMenuItem18.setText("Copy");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem18);

        jMenuItem19.setText("Paste");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem19);

        jMenu5.add(jMenu6);

        jMenu7.setText("ClipBoard2");

        jMenuItem20.setText("Copy");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem20);

        jMenuItem21.setText("Paste");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem21);

        jMenu5.add(jMenu7);

        jMenu8.setText("ClipBoard3");

        jMenuItem22.setText("Copy");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem22);

        jMenuItem23.setText("Paste");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem23);

        jMenu5.add(jMenu8);

        jMenu9.setText("ClipBoard4");

        jMenuItem24.setText("Copy");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem24);

        jMenuItem25.setText("Paste");
        jMenuItem25.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem25ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem25);

        jMenu5.add(jMenu9);

        jMenu10.setText("ClipBoard5");

        jMenuItem26.setText("Copy");
        jMenuItem26.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem26ActionPerformed(evt);
            }
        });
        jMenu10.add(jMenuItem26);

        jMenuItem27.setText("Paste");
        jMenuItem27.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem27ActionPerformed(evt);
            }
        });
        jMenu10.add(jMenuItem27);

        jMenu5.add(jMenu10);

        jMenu11.setText("ClipBoard6");

        jMenuItem28.setText("Copy");
        jMenuItem28.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem28ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem28);

        jMenuItem29.setText("Paste");
        jMenuItem29.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem29ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem29);

        jMenu5.add(jMenu11);

        jMenu12.setText("ClipBoard7");

        jMenuItem30.setText("Copy");
        jMenuItem30.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem30ActionPerformed(evt);
            }
        });
        jMenu12.add(jMenuItem30);

        jMenuItem31.setText("Paste");
        jMenuItem31.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem31ActionPerformed(evt);
            }
        });
        jMenu12.add(jMenuItem31);

        jMenu5.add(jMenu12);

        jMenu13.setText("ClipBoard8");

        jMenuItem32.setText("Copy");
        jMenuItem32.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem32ActionPerformed(evt);
            }
        });
        jMenu13.add(jMenuItem32);

        jMenuItem33.setText("Paste");
        jMenuItem33.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem33ActionPerformed(evt);
            }
        });
        jMenu13.add(jMenuItem33);

        jMenu5.add(jMenu13);

        jMenu14.setText("ClipBoard9");

        jMenuItem34.setText("Copy");
        jMenuItem34.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem34ActionPerformed(evt);
            }
        });
        jMenu14.add(jMenuItem34);

        jMenuItem35.setText("Paste");
        jMenuItem35.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem35ActionPerformed(evt);
            }
        });
        jMenu14.add(jMenuItem35);

        jMenu5.add(jMenu14);

        jMenu15.setText("ClipBoard10");

        jMenuItem36.setText("Copy");
        jMenuItem36.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem36ActionPerformed(evt);
            }
        });
        jMenu15.add(jMenuItem36);

        jMenuItem37.setText("Paste");
        jMenuItem37.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem37ActionPerformed(evt);
            }
        });
        jMenu15.add(jMenuItem37);

        jMenu5.add(jMenu15);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 488, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        cur_but = 5;
        String filename = null;
        JFileChooser chooser = new JFileChooser("Open a File");
        String[] filetype = new String[]
        {
            "ges"
        };
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        FileInputStream fileinput = null;
        InputStream buffer = null;
        ObjectInputStream objectinput = null;
        int option = chooser.showOpenDialog(null);
        if (option == JFileChooser.APPROVE_OPTION)
        {
            filename = (chooser.getSelectedFile() != null) ? chooser.getSelectedFile().getName() : null;
            if (filename != null)
            {
                filename = chooser.getSelectedFile().getPath();

                try
                {
                    GraphicsEditorSystem.currentfilename = new String(filename);
                    fileinput = new FileInputStream(filename);
                    buffer = new BufferedInputStream(fileinput);
                    objectinput = new ObjectInputStream(buffer);
                }
                catch (FileNotFoundException ex)
                {
                    //Logger.getLogger(testframe.class.getName()).log(Level.SEVERE, null, ex);
                }
                catch (IOException ex)
                {
                    JOptionPane.showMessageDialog(null, "Not a Supported File Type!!!");
                    return;
                }

                //deserialize the List
                try
                {
                    canvas = (ClipBoard) objectinput.readObject();
                    canvas.ClipBoardinit();
                    gesworkspace g = new gesworkspace();
                    g.setTitle(currentfilename + " - Graphics Editor System");
                    g.setVisible(true);
                    g.add(canvas);
                    canvas.requestFocusInWindow();
                    canvas.setVisible(true);
                    canvas.repaint();
                    objectinput.close();
                    fileinput.close();
                    this.dispose();
                }
                catch (IOException ex)
                {

                    JOptionPane.showMessageDialog(null, "Not a Supported File Type!!!");
                    return;
                }
                catch (ClassNotFoundException ex)
                {

                    JOptionPane.showMessageDialog(null, "Not a Supported File Type!!!");
                    return;
                }

            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        if (o == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            o.copy(0);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        if (o == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            o.delete();
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        if (o == null)
        {
            JOptionPane.showMessageDialog(null, "Select object");
        }
        else if (JOptionPane.showConfirmDialog(null, "add object to a group?") == JOptionPane.YES_OPTION)
        {
            String s = JOptionPane.showInputDialog(null, "Enter group name:");
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(s) == 0)
                {
                    canvas.glist[i].add_object(o);
                    JOptionPane.showMessageDialog(null, "Object added");
                    canvas.repaint();
                    return;
                }
            }
            JOptionPane.showMessageDialog(null, "No group with this name");
        }
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        if (o == null)
        {
            JOptionPane.showMessageDialog(null, "Select object");
        }
        else if (JOptionPane.showConfirmDialog(null, "remove object from a group?") == JOptionPane.YES_OPTION)
        {
            String s = JOptionPane.showInputDialog(null, "Enter group name:");
            int groupthere = 0;
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(s) == 0)
                {
                    groupthere = 1;
                }
            }
            if (groupthere == 0)
            {
                JOptionPane.showMessageDialog(null, "No group with this name .");
                return;
            }
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(s) == 0)
                {
                    canvas.glist[i].remove_object(o);
                    JOptionPane.showMessageDialog(null, "Object removed");
                    canvas.repaint();
                    return;
                }
            }
            JOptionPane.showMessageDialog(null, "Object not in group");
        }
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        cur_but = 5;
        if (JOptionPane.showConfirmDialog(null, "delete group?") == JOptionPane.YES_OPTION)
        {
            group g = canvas.get_selected_group();
            if (g == null)
            {
                JOptionPane.showMessageDialog(null, "Select group");
                return;
            }
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    canvas.remove_group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (canvas.get_selected_object() == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            canvas.get_selected_object().linetype = 0;
            canvas.repaint();
        }
        cur_but = 5;
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        cur_but = 5;
        GraphicsEditorSystem.canvas.deselect_object();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        cur_but = 4;
        GraphicsEditorSystem.canvas.deselect_object();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        cur_but = 3;
        GraphicsEditorSystem.canvas.deselect_object();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        cur_but = 2;
        GraphicsEditorSystem.canvas.deselect_object();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        cur_but = 1;
        GraphicsEditorSystem.canvas.deselect_object();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cur_but = 0;
        GraphicsEditorSystem.canvas.deselect_object();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if (canvas.get_selected_object() == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            canvas.get_selected_object().linesize = 0;
            canvas.repaint();
        }
        cur_but = 5;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (canvas.get_selected_object() == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            canvas.get_selected_object().linetype = 1;
            canvas.repaint();
        }
        cur_but = 5;
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        cur_but = 5;
        canvas.removeMouseListener(canvas);
        canvas.removeMouseMotionListener(canvas);
        if (canvas.zoom)
        {
            if (canvas.zoomIn != 1.0)
            {
                canvas.zoomIn -= 0.1;
                canvas.zoomEnabled = true;
                canvas.zoomCommandGiven = +1;
                canvas.zoom = true;
            }
            else
            {
                canvas.zoomEnabled = true;
                canvas.zoomCommandGiven = -1;
                canvas.zoomOut += 0.1;
                canvas.zoom = false;
            }
        }
        else
        {
            canvas.zoomEnabled = true;
            canvas.zoomCommandGiven = -1;
            canvas.zoomOut += 0.1;
            canvas.zoom = false;
        }
        canvas.repaint();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        cur_but = 5;
        if (copy_object_clip[2] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 2);
            }
        }

        group g = copy_group_clip[2];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 2);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        cur_but = 5;
        if (copy_object_clip[3] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 3);
            }
        }

        group g = copy_group_clip[3];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 3);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(2);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[2] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(3);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[3] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jMenuItem30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem30ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(7);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[7] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem30ActionPerformed

    private void jMenuItem34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem34ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(9);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[9] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem34ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        cur_but = 5;
        System.out.println("New File");
        switch (JOptionPane.showConfirmDialog(null, "Want to Save before closing ?"))
        {
            case JOptionPane.YES_OPTION:
            {
                if (currentfilename == null)
                {
                    JFileChooser chooser = new JFileChooser("Save a file");

                    String[] filetype = new String[]
                    {
                        "ges"
                    };
                    chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
                    String filename = null;
                    String dirname = null;

                    int option = chooser.showSaveDialog(null);
                    if (option == JFileChooser.APPROVE_OPTION)
                    {

                        filename = (chooser.getSelectedFile() != null) ? chooser.getSelectedFile().getName() : null;
                        if (filename != null)
                        {
                            try
                            {
                                filename = chooser.getSelectedFile().getPath();
                                System.out.println("filename =" + filename);
                                filename = filename + ".ges";

                                FileOutputStream fileoutput = new FileOutputStream(filename);
                                OutputStream bufferoutput = new BufferedOutputStream(fileoutput);
                                ObjectOutputStream objectoutput = new ObjectOutputStream(bufferoutput);
                                // here arraylists are  to be written in the file
                                //the order of writing arraylist is bubblelist--rectlist--storelist--dfalist
                                GraphicsEditorSystem.currentfilename = new String(filename);
                                objectoutput.writeObject(canvas);

                                objectoutput.close();
                                fileoutput.close();
                            }
                            catch (FileNotFoundException ex)
                            {
                                Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            catch (IOException ex)
                            {
                                Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }
                    }
                }
                else
                {
                    try
                    {
                        String filename = new String(currentfilename);
                        FileOutputStream fileoutput = new FileOutputStream(filename);
                        OutputStream bufferoutput = new BufferedOutputStream(fileoutput);
                        ObjectOutputStream objectoutput = new ObjectOutputStream(bufferoutput);
                        // here arraylists are  to be written in the file
                        //the order of writing arraylist is bubblelist--rectlist--storelist--dfalist
                        GraphicsEditorSystem.currentfilename = new String(filename);
                        objectoutput.writeObject(canvas);

                        objectoutput.close();
                        fileoutput.close();
                    }
                    catch (FileNotFoundException ex)
                    {
                        Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    catch (IOException ex)
                    {
                        Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                canvas = new ClipBoard();
                gesworkspace g = new gesworkspace();
                g.setTitle(currentfilename + " - Graphics Editor System");
                g.setVisible(true);
                g.add(canvas);
                canvas.requestFocusInWindow();
                canvas.setVisible(true);
                canvas.repaint();
                this.dispose();

            }
            case JOptionPane.NO_OPTION:
            {
                canvas = new ClipBoard();
                gesworkspace g = new gesworkspace();
                g.setTitle(currentfilename + " - Graphics Editor System");
                g.setVisible(true);
                g.add(canvas);
                canvas.requestFocusInWindow();
                canvas.setVisible(true);
                canvas.repaint();
                this.dispose();
            }
            case JOptionPane.CANCEL_OPTION:
            {
                return;
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        cur_but = 5;
        if (canvas.get_selected_object() == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            double x = Double.valueOf(JOptionPane.showInputDialog("Enter x coordinate of new location:"));
            double y = Double.valueOf(JOptionPane.showInputDialog("Enter x coordinate of new location:"));
            canvas.get_selected_object().move_to(new Point2D.Double(x, y));
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        if (o == null)
        {
            JOptionPane.showMessageDialog(null, "Select an object");
            cur_but = 5;
            return;
        }
        if (o.shape == 0)
        {
            circle c = (circle) o;
            c.radius = Double.valueOf(JOptionPane.showInputDialog("radius:"));
            repaint();
        }
        else if (o.shape == 1)
        {
            line l = (line) o;
            l.p2 = new Point2D.Double(Double.valueOf(JOptionPane.showInputDialog("x2=")),
                    Double.valueOf(JOptionPane.showInputDialog("y2=")));
            repaint();
        }
        else if (o.shape == 2)
        {
            rectangle r = (rectangle) o;
            r.breadth = Double.valueOf(JOptionPane.showInputDialog("breadth="));
            r.length = Double.valueOf(JOptionPane.showInputDialog("length="));
            repaint();
        }
        else if (o.shape == 3)
        {
            ellipse e = (ellipse) o;
            e.HAxis = Double.valueOf(JOptionPane.showInputDialog("HAxis="));
            e.VAxis = Double.valueOf(JOptionPane.showInputDialog("VAxis="));
            repaint();
        }
        else if (o.shape == 4)
        {
            if (JOptionPane.showConfirmDialog(this, "Modify Polygon?") == JOptionPane.YES_OPTION)
            {
                polygon p = (polygon) o;
                p.npoints = Integer.valueOf(JOptionPane.showInputDialog("no. of vertices:"));
                for (int i = 0; i < p.npoints; i++)
                {
                    p.xpoints[i] = Integer.valueOf(JOptionPane.showInputDialog("xpoint[" + i + "]"));
                    p.ypoints[i] = Integer.valueOf(JOptionPane.showInputDialog("ypoint[" + i + "]"));
                }
                p.location = new Point2D.Double(p.xpoints[0], p.ypoints[0]);
                repaint();
            }
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        GeometricObject o = canvas.get_selected_object();
        if (o == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            Color c = JColorChooser.showDialog(this, null, Color.white);
            o.fill_color(c);
        }
        cur_but = 5;
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (canvas.get_selected_object() == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            canvas.get_selected_object().linetype = 2;
            canvas.repaint();
        }
        cur_but = 5;
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if (canvas.get_selected_object() == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            canvas.get_selected_object().linesize = 1;
            canvas.repaint();
        }
        cur_but = 5;
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        if (canvas.get_selected_object() == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            canvas.get_selected_object().linesize = 2;
            canvas.repaint();
        }
        cur_but = 5;
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        cur_but = 5;
        if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
        {
            Double x, y;
            x = Double.valueOf(JOptionPane.showInputDialog("at x="));
            y = Double.valueOf(JOptionPane.showInputDialog("at y="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_object(l, 0);
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        if (o == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object");
            cur_but = 5;
        }
        else
        {
            o.copy(0);
            o.isAlive = false;
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(1);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[1] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }

    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(4);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[4] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jMenuItem26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem26ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(5);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[5] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem26ActionPerformed

    private void jMenuItem28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem28ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(6);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[6] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem28ActionPerformed

    private void jMenuItem32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem32ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(8);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[8] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem32ActionPerformed

    private void jMenuItem36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem36ActionPerformed
        cur_but = 5;
        GeometricObject o = canvas.get_selected_object();
        group g = canvas.get_selected_group();
        if (o == null && g == null)
        {
            JOptionPane.showMessageDialog(this, "Select an object or group");
            cur_but = 5;
        }
        if (o != null)
        {
            o.copy(10);
        }
        if (g != null)
        {
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[10] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem36ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        cur_but = 5;
        if (copy_object_clip[1] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 1);
            }
        }

        group g = copy_group_clip[1];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 1);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem25ActionPerformed
        cur_but = 5;
        if (copy_object_clip[4] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 4);
            }
        }

        group g = copy_group_clip[4];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 4);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem25ActionPerformed

    private void jMenuItem27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem27ActionPerformed
        cur_but = 5;
        if (copy_object_clip[5] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 5);
            }
        }

        group g = copy_group_clip[5];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 5);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem27ActionPerformed

    private void jMenuItem29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem29ActionPerformed
        cur_but = 5;
        if (copy_object_clip[6] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 6);
            }
        }

        group g = copy_group_clip[6];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 6);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem29ActionPerformed

    private void jMenuItem31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem31ActionPerformed
        cur_but = 5;
        if (copy_object_clip[7] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 7);
            }
        }

        group g = copy_group_clip[7];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 7);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem31ActionPerformed

    private void jMenuItem33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem33ActionPerformed
        cur_but = 5;
        if (copy_object_clip[8] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 8);
            }
        }

        group g = copy_group_clip[8];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 8);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem33ActionPerformed

    private void jMenuItem35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem35ActionPerformed
        cur_but = 5;
        if (copy_object_clip[9] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 9);
            }
        }

        group g = copy_group_clip[9];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 9);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem35ActionPerformed

    private void jMenuItem37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem37ActionPerformed
        cur_but = 5;
        if (copy_object_clip[10] != null)
        {
            if (JOptionPane.showConfirmDialog(null, "Paste Object?") == JOptionPane.YES_OPTION)
            {
                Double x, y;
                x = Double.valueOf(JOptionPane.showInputDialog("at x="));
                y = Double.valueOf(JOptionPane.showInputDialog("at y="));
                Point2D l = new Point2D.Double(x, y);
                canvas.paste_object(l, 10);
            }
        }

        group g = copy_group_clip[10];
        if (g == null)
        {
            //JOptionPane.showMessageDialog(null, "Copy group");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            Double x = Double.valueOf(JOptionPane.showInputDialog("paste group at x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("paste group at y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 10);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem37ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        cur_but = 5;
        if (JOptionPane.showConfirmDialog(null, "add new group?") == JOptionPane.YES_OPTION)
        {
            String s = JOptionPane.showInputDialog(null, "Enter group name:");
            group g = new group(s);
            canvas.add_group(g, s);
            repaint();
        }
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem38ActionPerformed
        cur_but = 5;
        if (JOptionPane.showConfirmDialog(null, "select group?") == JOptionPane.YES_OPTION)
        {
            canvas.deselect_group();
            String s = JOptionPane.showInputDialog(null, "Enter group name:");
            int ispresent = 0;
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(s) == 0)
                {
                    ispresent = 1;
                }
            }
            if (ispresent == 0)
            {
                JOptionPane.showMessageDialog(null, "No group with this name");
            }
            canvas.select_group(s);
            repaint();
        }
    }//GEN-LAST:event_jMenuItem38ActionPerformed

    private void jMenuItem39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem39ActionPerformed
        cur_but = 5;
        group g = canvas.get_selected_group();
        if (g == null)
        {
            JOptionPane.showMessageDialog(null, "Select group");
        }
        else
        {
            if (JOptionPane.showConfirmDialog(null, "Move group " + g.name + " ?") == JOptionPane.YES_OPTION)
            {
                Double x = Double.valueOf(JOptionPane.showInputDialog("move by x="));
                Double y = Double.valueOf(JOptionPane.showInputDialog("move by y="));
                g.move_by(new Point2D.Double(x, y));
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem39ActionPerformed

    private void jMenuItem40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem40ActionPerformed
        cur_but = 5;
        if (JOptionPane.showConfirmDialog(null, "copy group?") == JOptionPane.YES_OPTION)
        {
            group g = canvas.get_selected_group();
            if (g == null)
            {
                JOptionPane.showMessageDialog(null, "Select group");
                return;
            }
            for (int i = 0; i < canvas.ngroups; i++)
            {
                if (canvas.glist[i].name.compareTo(g.name) == 0)
                {
                    copy_group_clip[0] = new group(canvas.glist[i]);
                }
            }
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem40ActionPerformed

    private void jMenuItem41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem41ActionPerformed
        cur_but = 5;
        if (JOptionPane.showConfirmDialog(null, "paste group?") == JOptionPane.YES_OPTION)
        {
            group g = copy_group_clip[0];
            if (g == null)
            {
                JOptionPane.showMessageDialog(null, "Copy group");
                return;
            }
            Double x = Double.valueOf(JOptionPane.showInputDialog("x w.r.t. original="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("y w.r.t. original="));
            Point2D l = new Point2D.Double(x, y);
            canvas.paste_group(l, 0);
            canvas.repaint();
        }
    }//GEN-LAST:event_jMenuItem41ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        cur_but = 5;
        JFileChooser fc = new JFileChooser();
        File f = null;
        //fc.setAcceptAllFileFilterUsed(false); // remove the accept-all (.*) file filter
        final String[] extensions =
        {
            "gif", "jpg", "png", "jpeg"
        };
        fc.setFileFilter(new FileFilter()
        {
            @Override
            public boolean accept(File file)
            {
                if (file.isDirectory())
                {
                    return true;
                }
                else
                {
                    String path = file.getAbsolutePath().toLowerCase();
                    for (int i = 0, n = extensions.length; i < n; i++)
                    {
                        String extension = extensions[i];
                        if ((path.endsWith(extension) && (path.charAt(path.length()
                                - extension.length() - 1)) == '.'))
                        {
                            return true;
                        }
                    }
                }
                return false;
            }

            @Override
            public String getDescription()
            {
                return "All image files";
            }
        });
        switch (fc.showOpenDialog(null))
        {
            case JFileChooser.APPROVE_OPTION:
            {
                JOptionPane.showMessageDialog(null, "Selected: "
                        + fc.getSelectedFile(),
                        "FCDemo",
                        JOptionPane.OK_OPTION);
                f = fc.getSelectedFile();
                break;
            }
            case JFileChooser.CANCEL_OPTION:
                JOptionPane.showMessageDialog(null, "Cancelled",
                        "FCDemo",
                        JOptionPane.OK_OPTION);
                break;

            case JFileChooser.ERROR_OPTION:
                JOptionPane.showMessageDialog(null, "Error",
                        "FCDemo",
                        JOptionPane.OK_OPTION);
        }
        try
        {
            BufferedImage image = ImageIO.read(f);
            Double x = Double.valueOf(JOptionPane.showInputDialog("Image location x="));
            Double y = Double.valueOf(JOptionPane.showInputDialog("Image location y="));
            Point2D l = new Point2D.Double(x, y);
            canvas.add_image(image, l);
            canvas.repaint();
        }
        catch (IOException ex)
        {
            Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IllegalArgumentException i)
        {

        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        cur_but = 5;
        JFileChooser chooser = new JFileChooser("Save a file");

        String[] filetype = new String[]
        {
            "ges"
        };
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        String filename = null;
        String dirname = null;

        int option = chooser.showSaveDialog(null);
        if (option == JFileChooser.APPROVE_OPTION)
        {

            filename = (chooser.getSelectedFile() != null) ? chooser.getSelectedFile().getName() : null;
            if (filename != null)
            {
                try
                {
                    filename = chooser.getSelectedFile().getPath();
                    System.out.println("filename =" + filename);
                    filename = filename + ".ges";

                    FileOutputStream fileoutput = new FileOutputStream(filename);
                    OutputStream bufferoutput = new BufferedOutputStream(fileoutput);
                    ObjectOutputStream objectoutput = new ObjectOutputStream(bufferoutput);
                    // here arraylists are  to be written in the file
                    //the order of writing arraylist is bubblelist--rectlist--storelist--dfalist
                    GraphicsEditorSystem.currentfilename = new String(filename);
                    objectoutput.writeObject(canvas);

                    objectoutput.close();
                    fileoutput.close();
                }
                catch (FileNotFoundException ex)
                {
                    Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                }
                catch (IOException ex)
                {
                    Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        cur_but = 5;
        if (currentfilename == null)
        {
            JFileChooser chooser = new JFileChooser("Save a file");

            String[] filetype = new String[]
            {
                "ges"
            };
            chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            String filename = null;
            String dirname = null;

            int option = chooser.showSaveDialog(null);
            if (option == JFileChooser.APPROVE_OPTION)
            {

                filename = (chooser.getSelectedFile() != null) ? chooser.getSelectedFile().getName() : null;
                if (filename != null)
                {
                    try
                    {
                        filename = chooser.getSelectedFile().getPath();
                        System.out.println("filename =" + filename);
                        filename = filename + ".ges";

                        FileOutputStream fileoutput = new FileOutputStream(filename);
                        OutputStream bufferoutput = new BufferedOutputStream(fileoutput);
                        ObjectOutputStream objectoutput = new ObjectOutputStream(bufferoutput);
                        // here arraylists are  to be written in the file
                        //the order of writing arraylist is bubblelist--rectlist--storelist--dfalist
                        GraphicsEditorSystem.currentfilename = new String(filename);
                        objectoutput.writeObject(canvas);

                        objectoutput.close();
                        fileoutput.close();
                    }
                    catch (FileNotFoundException ex)
                    {
                        Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    catch (IOException ex)
                    {
                        Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        }
        else
        {
            try
            {
                String filename = new String(currentfilename);
                FileOutputStream fileoutput = new FileOutputStream(filename);
                OutputStream bufferoutput = new BufferedOutputStream(fileoutput);
                ObjectOutputStream objectoutput = new ObjectOutputStream(bufferoutput);
                // here arraylists are  to be written in the file
                //the order of writing arraylist is bubblelist--rectlist--storelist--dfalist
                GraphicsEditorSystem.currentfilename = new String(filename);
                objectoutput.writeObject(canvas);

                objectoutput.close();
                fileoutput.close();
            }
            catch (FileNotFoundException ex)
            {
                Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch (IOException ex)
            {
                Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        cur_but = 5;
        switch (JOptionPane.showConfirmDialog(null, "Want to Save before closing ?"))
        {
            case JOptionPane.YES_OPTION:
            {
                if (currentfilename == null)
                {
                    JFileChooser chooser = new JFileChooser("Save a file");

                    String[] filetype = new String[]
                    {
                        "ges"
                    };
                    chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
                    String filename = null;
                    String dirname = null;

                    int option = chooser.showSaveDialog(null);
                    if (option == JFileChooser.APPROVE_OPTION)
                    {

                        filename = (chooser.getSelectedFile() != null) ? chooser.getSelectedFile().getName() : null;
                        if (filename != null)
                        {
                            try
                            {
                                filename = chooser.getSelectedFile().getPath();
                                System.out.println("filename =" + filename);
                                filename = filename + ".ges";

                                FileOutputStream fileoutput = new FileOutputStream(filename);
                                OutputStream bufferoutput = new BufferedOutputStream(fileoutput);
                                ObjectOutputStream objectoutput = new ObjectOutputStream(bufferoutput);
                                // here arraylists are  to be written in the file
                                //the order of writing arraylist is bubblelist--rectlist--storelist--dfalist
                                GraphicsEditorSystem.currentfilename = new String(filename);
                                objectoutput.writeObject(canvas);

                                objectoutput.close();
                                fileoutput.close();
                            }
                            catch (FileNotFoundException ex)
                            {
                                Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            catch (IOException ex)
                            {
                                Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }
                    }
                }
                else
                {
                    try
                    {
                        String filename = new String(currentfilename);
                        FileOutputStream fileoutput = new FileOutputStream(filename);
                        OutputStream bufferoutput = new BufferedOutputStream(fileoutput);
                        ObjectOutputStream objectoutput = new ObjectOutputStream(bufferoutput);
                        // here arraylists are  to be written in the file
                        //the order of writing arraylist is bubblelist--rectlist--storelist--dfalist
                        GraphicsEditorSystem.currentfilename = new String(filename);
                        objectoutput.writeObject(canvas);

                        objectoutput.close();
                        fileoutput.close();
                    }
                    catch (FileNotFoundException ex)
                    {
                        Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    catch (IOException ex)
                    {
                        Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                System.exit(0);
            }
            case JOptionPane.NO_OPTION:
            {
                System.exit(0);
            }
            case JOptionPane.CANCEL_OPTION:
            {
                return;
            }
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        for (int i = 0; i < canvas.nobj; i++)
        {
            canvas.golist[i].move_to(new Point2D.Double(canvas.golist[i].location.getX() + 10,
                    canvas.golist[i].location.getY()));
        }
        for (Text t : canvas.textList)
        {
            t.x += 10;
        }
        canvas.repaint();
        cur_but = 5;
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        for (int i = 0; i < canvas.nobj; i++)
        {
            canvas.golist[i].move_to(new Point2D.Double(canvas.golist[i].location.getX(),
                    canvas.golist[i].location.getY() - 10));
        }
        for (Text t : canvas.textList)
        {
            t.y -= 10;
        }
        canvas.repaint();
        cur_but = 5;
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        for (int i = 0; i < canvas.nobj; i++)
        {
            canvas.golist[i].move_to(new Point2D.Double(canvas.golist[i].location.getX(),
                    canvas.golist[i].location.getY() + 10));
        }
        for (Text t : canvas.textList)
        {
            t.y += 10;
        }
        canvas.repaint();
        cur_but = 5;
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        for (int i = 0; i < canvas.nobj; i++)
        {
            canvas.golist[i].move_to(new Point2D.Double(canvas.golist[i].location.getX() - 10,
                    canvas.golist[i].location.getY()));
        }
        for (Text t : canvas.textList)
        {
            t.x -= 10;
        }
        canvas.repaint();
        cur_but = 5;
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        cur_but = 5;
        canvas.removeMouseListener(canvas);
        canvas.removeMouseMotionListener(canvas);
        if (canvas.zoom)
        {
            canvas.zoomEnabled = true;
            canvas.zoomCommandGiven = 1;
            canvas.zoomIn += 0.1;
            canvas.zoom = true;
        }
        else
        {
            canvas.zoomEnabled = true;
            canvas.zoomCommandGiven = -1;
            canvas.zoomOut -= 0.1;
            canvas.zoom = false;
        }
        canvas.repaint();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        cur_but = 5;
        canvas.addMouseListener(canvas);
        canvas.addMouseMotionListener(canvas);
        canvas.zoomEnabled = false;
        canvas.zoomCommandGiven = 0;
        canvas.zoomIn = 1.0;
        canvas.zoomOut = 1.0;
        canvas.repaint();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        cur_but = 5;// TODO add your handling code here:
        String filename = null;
        JFileChooser chooser = new JFileChooser("Save a file");

        String[] filetype = new String[]
        {
            "png"
        };
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        String dirname = null;

        int option = chooser.showSaveDialog(null);
        if (option == JFileChooser.APPROVE_OPTION)
        {

            filename = (chooser.getSelectedFile() != null) ? chooser.getSelectedFile().getName() : null;
            if (filename != null)
            {
                try
                {
                    filename = chooser.getSelectedFile().getPath();
                    System.out.println("filename =" + filename);
                    filename = filename + ".png";

                    FileOutputStream fileoutput = new FileOutputStream(filename);
                    OutputStream bufferoutput = new BufferedOutputStream(fileoutput);
                    ObjectOutputStream objectoutput = new ObjectOutputStream(bufferoutput);
                    // here arraylists are  to be written in the file
                    //the order of writing arraylist is bubblelist--rectlist--storelist--dfalist
                    GraphicsEditorSystem.currentfilename = new String(filename);
                    objectoutput.writeObject(canvas);

                    objectoutput.close();
                    fileoutput.close();
                }
                catch (FileNotFoundException ex)
                {
                    Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                }
                catch (IOException ex)
                {
                    Logger.getLogger(gesworkspace.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
        canvas.export_image(filename);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        String s = JOptionPane.showInputDialog("Enter Text:");
        double x = Double.valueOf(JOptionPane.showInputDialog("At x="));
        double y = Double.valueOf(JOptionPane.showInputDialog("At y="));
        Text tex = new Text(s, x, y);
        canvas.textList.add(tex);
        canvas.repaint();
    }//GEN-LAST:event_jButton18ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(gesworkspace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(gesworkspace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(gesworkspace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(gesworkspace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new gesworkspace().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu13;
    private javax.swing.JMenu jMenu14;
    private javax.swing.JMenu jMenu15;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem28;
    private javax.swing.JMenuItem jMenuItem29;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem30;
    private javax.swing.JMenuItem jMenuItem31;
    private javax.swing.JMenuItem jMenuItem32;
    private javax.swing.JMenuItem jMenuItem33;
    private javax.swing.JMenuItem jMenuItem34;
    private javax.swing.JMenuItem jMenuItem35;
    private javax.swing.JMenuItem jMenuItem36;
    private javax.swing.JMenuItem jMenuItem37;
    private javax.swing.JMenuItem jMenuItem38;
    private javax.swing.JMenuItem jMenuItem39;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem40;
    private javax.swing.JMenuItem jMenuItem41;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
